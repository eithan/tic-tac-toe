# Multi-stage Dockerfile for AlphaZero deployment
# Stage 1: Build stage with all dependencies
FROM python:3.12-slim as builder

# Set working directory
WORKDIR /app

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    pkg-config \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY backend/requirements_alphazero.txt requirements.txt
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy source code
COPY library/ ./library/
COPY neuralnet/ ./neuralnet/

# Install local packages
RUN pip install --no-cache-dir --user -e ./library
RUN pip install --no-cache-dir --user -e ./neuralnet

# Stage 2: Runtime stage - minimal image
FROM python:3.12-slim as runtime

# Set working directory
WORKDIR /app

# Install only runtime system dependencies
RUN apt-get update && apt-get install -y \
    libopenblas0 \
    liblapack3 \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Copy application code
COPY backend/ .

# Make sure scripts in .local are usable
ENV PATH=/root/.local/bin:$PATH

# Expose port 8080 (Cloud Run default)
EXPOSE 8080

# Set environment variables
ENV PORT=8080
ENV ENVIRONMENT=production
ENV PYTHONPATH=/app:/root/.local/lib/python3.12/site-packages

# Run the FastAPI application
CMD ["uvicorn", "server_hybrid:app", "--host", "0.0.0.0", "--port", "8080"]
